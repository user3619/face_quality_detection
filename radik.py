import telebot
from telebot import types
import requests
import os

bot = telebot.TeleBot('7761604165:AAF86f2zHBidKdurquVWFNMyKzCz8JyKQEo')

@bot.message_handler(content_types=['text'])
def func(message):
    if message.text == "–ü—Ä–∏–≤–µ—Ç":
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–∂–∏. –û—Ç–ø—Ä–∞–≤–ª—è—è —Ñ–æ—Ç–æ, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö. –§–æ—Ç–æ —É–¥–∞–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞. –ù–∞–ø–∏—à–∏ '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å' –¥–ª—è –º–µ–Ω—é!")
    elif message.text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ß—Ç–æ –º–æ–∂–µ—Ç –±–æ—Ç?")
        btn2 = types.KeyboardButton("–ö–æ–∂–∞")
        btn3 = types.KeyboardButton("–†–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–∏–ø –∫–æ–∂–∏")
        btn4 = types.KeyboardButton("–ü–æ–º–æ—â—å")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, btn3, btn4, back)
        bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup)
    elif message.text == "–ß—Ç–æ –º–æ–∂–µ—Ç –±–æ—Ç?":
        bot.send_message(message.chat.id, "–Ø –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–∂—É –ø–æ —Ñ–æ—Ç–æ, –æ–ø—Ä–µ–¥–µ–ª—è—é —Ç–∏–ø (–Ω–æ—Ä–º–∞–ª—å–Ω–∞—è, —Å—É—Ö–∞—è, –∂–∏—Ä–Ω–∞—è) –∏ –ø—Ä–æ–±–ª–µ–º—ã (–∞–∫–Ω–µ, –º–æ—Ä—â–∏–Ω—ã), –∞ —Ç–∞–∫–∂–µ –¥–∞—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ö–æ–¥—É!")
    elif message.text == "–ö–æ–∂–∞":
        bot.send_message(message.chat.id, text="–¢–∏–ø—ã –∫–æ–∂–∏:\n- –ù–æ—Ä–º–∞–ª—å–Ω–∞—è: —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è, –±–µ–∑ –∏–∑–ª–∏—à–Ω–µ–π —Å—É—Ö–æ—Å—Ç–∏ –∏–ª–∏ –∂–∏—Ä–Ω–æ—Å—Ç–∏.\n- –°—É—Ö–∞—è: —Å–∫–ª–æ–Ω–Ω–∞ –∫ —à–µ–ª—É—à–µ–Ω–∏—é, —Ç—Ä–µ–±—É–µ—Ç —É–≤–ª–∞–∂–Ω–µ–Ω–∏—è.\n- –ñ–∏—Ä–Ω–∞—è: —Å–∫–ª–æ–Ω–Ω–∞ –∫ –±–ª–µ—Å–∫—É –∏ –∞–∫–Ω–µ, —Ç—Ä–µ–±—É–µ—Ç –º–∞—Ç–∏—Ä—É—é—â–∏—Ö —Å—Ä–µ–¥—Å—Ç–≤.\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞!")
    elif message.text == "–†–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–∏–ø –∫–æ–∂–∏":
        bot.send_message(message.chat.id, text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –ª–∏—Ü–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:\n- –õ–∏—Ü–æ —Ö–æ—Ä–æ—à–æ –æ—Å–≤–µ—â–µ–Ω–æ.\n- –§–æ—Ç–æ —Å–¥–µ–ª–∞–Ω–æ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤.\n- –õ–∏—Ü–æ –∑–∞–Ω–∏–º–∞–µ—Ç –±–æ–ª—å—à—É—é —á–∞—Å—Ç—å –∫–∞–¥—Ä–∞.")
    elif message.text == "–ü–æ–º–æ—â—å":
        bot.send_message(message.chat.id, text="–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å'.")
    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("–ü–æ–º–æ—â—å")
        button2 = types.KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
        button3 = types.KeyboardButton("–ü—Ä–∏–≤–µ—Ç")
        markup.add(button1, button2, button3)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω. –ù–∞–ø–∏—à–∏ '–ü—Ä–∏–≤–µ—Ç' –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ.")

@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    bot.send_message(message.chat.id, "–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ, –Ω–∞—á–∏–Ω–∞—é –∞–Ω–∞–ª–∏–∑... ‚åõÔ∏è")
    temp_path = "temp_image.jpg"
    try:
        file_info = bot.get_file(message.photo[-1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        with open(temp_path, 'wb') as new_file:
            new_file.write(downloaded_file)

        if not os.path.exists(temp_path):
            bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü—Ä–æ–≤–µ—Ä—å –¥–æ—Å—Ç—É–ø –∫ –ø–∞–ø–∫–µ.")
            return

        with open(temp_path, 'rb') as f:
            files = {'file': f}
            response = requests.post("http://localhost:8000/predict", files=files)

        if response.status_code == 200:
            data = response.json()
            predicted_class = data.get('predicted_class', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            advice = data.get('advice', '–ù–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.')

            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π
            probabilities = {k: v for k, v in data.items() if k not in ['predicted_class', 'advice']}
            probs_text = ""
            for k, v in probabilities.items():
                try:
                    probs_text += f"{k}: {float(v):.2%}\n"
                except (ValueError, TypeError):
                    probs_text += f"{k}: {v}\n"

            result_message = (
                f"üîç –ö–ª–∞—Å—Å: *{predicted_class}*\n"
                f"üìä –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏:\n{probs_text}\n"
                f"üìã –°–æ–≤–µ—Ç—ã:\n{advice}"
            )

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ")
            markup.add(btn)
            bot.send_message(message.chat.id, result_message, reply_markup=markup, parse_mode="Markdown")
        else:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    except Exception as e:
        bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    finally:
        if os.path.exists(temp_path):
            try:
                os.remove(temp_path)
            except Exception:
                pass

bot.polling(none_stop=True)
